export const messages = {
  common: {
    executionNumber: '执行次数',
    createTime: '创建时间',
    lastExecutionTime: '最后一次执行时间',
    enableOrDisable: '启用/禁用',
    remark: '备注',
    errorMessage: '{msg}',
    copyboard: '已复制，请您继续接下来的操作。',
    serviceTableContentNoData: '无数据',
    serviceTableContentNoDataHint: '您可以尝试刷新数据',
    cancel: '取消',
    create: '创建',
    confirm: '确认',
    nextStep: '下一步',
    previousStep: '上一步',
    deploy: '部署',
    name: '名称',
    status: '状态',
    startTime: '启动时间',
    beginTime: '开始时间',
    endTime: '结束时间',
    time: '时间',
    serviceInstance: '服务实例',
    service: '服务',
    repo: '代码仓库地址',
    imageUrl: '镜像仓库地址&TAG',
    serviceVersion: '服务版本',
    serviceCollection: '服务集合',
    interfaceCollection: '接口集合',
    serviceName: '服务名称',
    serviceId: '服务ID',
    schemeDeploy: '方案部署',
    selectCluster: '选择集群',
    lookupDependency: '查看依赖',
    allNamespaces: '全部命名空间',
    namespace: '命名空间',
    protocol: '协议',
    containerPort: '容器端口',
    image: '镜像',
    container: '容器',
    basicInfo: '基本信息',
    usage: '用量',
    received: '入站',
    transferred: '出站',
    timer: '定时器',
    requestHeader: '请求头',
    requestParameters: '请求参数',
    requestBody: '请求体',
    requestMethod: '请求方法',
    port: '端口',
    path: '路径',
    hostIP: '主机地址',
    httpRequest: 'HTTP请求',
    cycleIndex: '循环次数',
    threadNum: '线程数',
    key: '键',
    value: '值',
    delay: '延迟',
    detailedInfo: '详细信息',
    operation: '操作',
    moreOperation: '更多操作',
    details: '详情',
    serialized: '序列化',
    functionMode: '函数模式',
    basicResult: '基本结果',
    idleTime: '空闲时间',
    connectTime: '连接时间',
    responseCode: '响应码',
    responseData: '响应数据',
    responseMessage: '响应消息',
    byteNum: '字节数',
    headByteNum: '头字节数',
    bodyByteNum: '体字节数',
    sendByteNum: '发送字节数',
    testPlan: '测试计划',
    edit: '编辑',
    delete: '删除',
    add: '添加',
    encode: '编码',
    contentType: '内容类型',
    includeEquals: '包含等于',
    webServer: 'WEB服务器',
    contentEncoding: '内容编码',
    parameters: '参数',
    requestBodyData: '消息体数据',
    choose1from2: '2选1',
    continue: '继续',
    annotation: '注释',
    forever: '永远',
    yes: '是',
    no: '否',
    searchByName: '按名称搜索',
    createdOn: '创建于',
    request: '请求',
    responseTime: '响应时间 (ms)',
    cluster: '集群',
    route: '路由',
    routeLink: '路由链路',
    routeControl: '路由控制',
    application: '应用模块',
    serviceCapabilityAutomaticTesting: '服务能力自动测试',
    serviceCapabilityJointTesting: '多负载服务能力测试',
    sonTestPlans: "子测试计划",
    imageManagement: '镜像管理',
    imageList: '镜像列表',
    bandwidth: '带宽',
    nameFormatError: '名称格式有误，请检查。',
    namespaceEmptyError: '请选择一个命名空间。',
    memory: '内存',
    execute: '执行',
    description: '描述',
    interface: '接口',
    id: 'ID',
    resourceRequest: '请求资源',
    resourceLimit: '资源限制',
    schemeDetails: '方案详情',
    cpu: 'CPU',
    portsDetails: '端口详情',
    deleteServiceError: '删除服务失败',
    deleteServiceSuccess: '删除服务成功',
    boundaryTest: '边界测试',
    tps: '每秒事务处理量',
    errorRate: "错误率",
    clusterNetwork:'集群网络',
    clusterNetworkDescription: '用于模拟不同的网络环境，设置不同服务器之间的网络延迟、带宽等。',
    type:'类型',
    args: '驱动参数',
    frequency:'频率',
    loading:'加载中',
    modify: '修改',
    last: '最近',
    minute: '分钟',
    hour: '小时',
    day: '天',
    minutes: '分钟',
    hours: '小时',
    days: '天',  },
  lang: {
    language: '语言',
  },
  menu: {
    clusterMangementDescription:
      '对多集群以及每个集群的基础资源、服务组件和应用资源等的统一管理。',
    platformManagement: '平台管理',
    clusterOverview: '集群总览',
    nodeNum: '节点数量',
  },
  scheme: {
    addSuccess: '部署方案添加成功，刷新可查看',
    addFail: '部署方案添加失败',
    getFail: '部署方案获取失败',
    addScheme: '添加方案',
    deploySuccess: '方案部署成功',
    deployFail: '方案部署失败，请重试...',
    deployScheme: '部署方案',
    editScheme: '编辑方案',
    schemeName: '方案名称',
  },
  serviceOverview: {
    serviceDescription:
      '服务（Service）提供一种抽象的方法，将运行在容器组（Pod）上的应用程序公开为网络服务。',
    allItems: "全部项目",
    requestedPath: "请求的路径",
    inputSize: "输入数据大小",
    outputSize: "输出数据大小",
    cpuResource: "CPU资源",
    ramResource: "RAM资源",
    diskResource: "Disk资源",
    gpuCoreResource: "gpu-core资源",
    gpuMemResource: "gpu内存资源",
    resourceAndCapability: "资源与能力",
    idleOccupation: "空闲时占用资源",
    desiredResource: "期望资源",
    processCapability: "处理能力",
    duration10M: '最近10分钟',
    duration20M: '最近20分钟',
    duration30M: '最近30分钟',
    duration1H: '最近1小时',
    duration2H: '最近2小时',
    duration3H: '最近3小时',
    duration5H: '最近5小时',
    duration12H: '最近12小时',
    duration1D: '最近1天',
    duration2D: '最近2天',
    duration3D: '最近3天',
    duration7D: '最近7天',
    requestMonitor: "请求监控",
    selectTimeRange: "选择时间范围",
    customTimeRange: "自定义时间范围",
    containerGroupResourceMonitoring: "容器组资源监控",
    podIP: "容器组IP地址",
    pod: "容器组",
    resourceNotFound: "未发现资源",
    total: "总数",
    linkLength: "链路长度",
    serviceRequestInterface: "服务接口请求",
    resourceStatus: "资源状态",
    serviceRequestStatus: "服务请求情况",
    resourceMonitor: "资源监控",
    editService: "编辑服务",
    editInfo: "编辑信息",
    cancelSelect: "取消选择",
    deleteServicesTitle: "删除所选服务?",
    deleteServicesDescription: "删除内容不可恢复。",
    batchDeleteSuccess: "成功删除所选服务",
    batchDeleteFail: "所选服务删除失败，请重试",
    addService:"添加服务",
    newService:"新建服务",
    serviceIDDescription:"服务ID只能包含字母、数字和连字符（-），必须以字母或数字开头和结尾，最长 253 个字符。",
    serviceNameDescription:"服务名称只能包含字母、数字和连字符（-），必须以字母或数字开头和结尾，最长 253 个字符。",
    serviceCommentDescription:"对于服务的补充说明",
    serviceDetails:"服务详情",
    codeRepository:"代码仓库地址",
    imageURLandTAG:"镜像仓库地址&TAG",
    swaggerUrl:"swaggerUrl",
    apiCollection:"接口集合",
    addApiEntry:"添加接口",
    api:"接口",
    apiPath:"请求的路径",
    apiInputSize:"输入数据大小",
    apiOutputSize:"输出数据大小",
    apiMethod:"请求方法",
    apiDescription:"接口描述",
    majorVersion:"主版本号",
    minorVersion:"次版本号",
    patchVersion:"修订号",
    export:"导出 JSON",
    exportInfo:"导出信息",
    download:"下载",
    startTime:"起始时间",
    endTime:"截止时间",
    step:"采样间隔",
    downloadError:"下载失败，请稍后重试...",
  },
  serviceDependency: {
    serviceDependencyNotFound: '所查询服务没有相关调用关系...',
    interfaceDependencyNotFound: '所查询接口没有相关调用关系...',
    errorMessage: '{msg}',
    searchServiceByIdEmptyError: '所查询ID没有相关服务...',
    searchServiceByNameVersionError:
      '未查询到目标服务名称与版本所对应的服务...',
    queryError: '查询出错，请重试...',
    podSearchError: '获取容器组出错，请刷新重试...',
    serviceDependencyDescription:
      '服务依赖是指一个软件系统依赖于外部的服务或API，通常通过网络进行通信。',
    serviceBasedMsg: '请选择一个服务。',
    interfaceBasedMsg: '请选择一个接口。',
    graphNotFound: "若未出现图，请重试",
    sourceInterfaceId: "源接口ID",
    sourceInterfacePath: "源接口路径",
    targetInterfaceId: "目标接口ID",
    targetInterfacePath: "目标接口路径",
    serviceDependency: "服务依赖",
    interfaceDependency: "接口依赖",
    noOptionalService: "无可选服务",
    optionalService: "可选服务",
    noOptionalInterface: "无可选接口",
    optionalInterface: "可选接口",
    deleteServiceError: "删除服务依赖失败",
    deleteServiceSuccess: "删除服务依赖成功",
    addServiceSuccess: "服务添加成功",
    addServiceError: "服务添加失败",
  },
  cluster: {
    clustersSearchError: '集群信息获取失败，请刷新页面重试...',
    clusterSelectHint: '请选择一个集群！',
    instanceSelectHint: '请选择一个服务实例！',
    serverSelectHint: '请选择一个服务器！',
    clusterInfo: '集群信息',
    instanceInfo: '实例信息',
    instanceList: '实例列表',
    clusterTopology: '集群拓扑结构',
    clusterNodeDescription:
      '集群节点是平台集群中的基础服务器，您可以在此页面查看集群节点信息。',
    schemeDeployDescription: '制定特定的计划或方案来服务的实际部署和实施过程。',
    nodeName: '节点名称',
    ipAddress: 'IP地址',
    settedResource: '设定资源量',
    usedResource: '使用资源量',
    cpuConfig: 'CPU配置',
    description: '描述',
    clusterNode: '集群节点',
    panelConfiguration: '面板配置',
    jsonConfiguration: 'JSON配置',
    addContainer: '添加容器',
    containerSetting: '容器设置',
    cpuReserved: 'CPU预留',
    noReserved: '不预留',
    cpuLimited: 'CPU限制',
    noLimited: '不限制',
    memReserved: '内存预留',
    memLimited: '内存限制',
    portSetting: '端口设置',
    addPort: '添加端口',
    instanceReplicas: '实例副本数量',
    imageAddress: '镜像地址',
    makeDeployment: '创建Deployment',
    podSetting: '容器组设置',
    clusterNodeNetworkInfo:'集群节点网络信息',
    getNetworkControlInfoError:'获取集群节点控制信息失败',
    localIp:'源Ip',
    targetIp:'目标Ip',
    bandWidth:'带宽',
    setBandwidth:'设置带宽控制',
    setBandwidthSuccess:'设置带宽控制成功',
    setBandwidthError:'设置带宽控制失败',
    deleteBandwidthSuccess:'删除带宽控制成功',
    deleteBandwidthError:'删除带宽控制失败',
    deleteBandwidthTitle: '删除该带宽控制?',
    allItems:'全部集群',
    bandwidthControlInfo:'带宽控制信息',
    newBandwidth:'新增带宽控制',
    editBandwidth:'编辑带宽控制',
    operation:'操作',
    getAllNetworkControlInfoError:'获取集群拓扑信息失败',
  },
  instance: {
    deploySuccess: '实例部署成功！',
    deployFailed: '实例部署失败，请重试...',
    serverIdDescription: '服务的唯一标识,一个服务ID对应一个服务。',
    namePatternErrorMsg:
      '名称无效。名称只能包含小写字母、数字和连字符（-），必须以小写字母或数字开头和结尾，最长 253 个字符。',
    nameEmptyErrorMsg: '请设置一个名称。',
    nameDescription:
      '名称只能包含小写字母、数字和连字符（-），必须以小写字母或数字开头和结尾，最长 253 个字符。',
    namespaceDescription: '选择将要创建资源的命名空间。',
    containerAddDescription: '自定义容器的设置以创建容器。',
    containerConfigDescription: '设置容器的镜像、名称、类型和计算资源。',
    containerInputPlaceHolder:
      '镜像路径，例如 192.168.0.1:5000/namespace/jenkins:latest',
    containerResourceConfigDescription:
      '设置容器的资源限制与资源预留，以将容器调度到合适的节点上。',
    portConfigDescription: '设置用于访问容器的端口。',
    protocolTip:
      '选择服务实际使用的协议以充分利用应用治理功能。例如，为 HTTP 服务选择 HTTP 协议。',
    instanceDescription:
      '服务实例（Pod），是服务实例运行的对象，通过服务来配置和管理。在实例列表，可以看到实例的状态、所在的主机IP、实例的IP、创建时间。',
    serviceIdEmptyError: '请填写服务对应的ID。',
    namespaceEmptyErrorMsg: '请选择一个命名空间',
    containerEmptyError: '请对容器进行设置。',
    imageUrlEmptyError: '请设置容器镜像路径。',
    resourceConflictError: '资源预留不能超过资源限制。',
    namespacesQueryError: '命名空间列表获取失败...请刷新页面重试。',
    resourceHistorySearchError: '资源历史获取失败。',
    jsonConfig: '实例部署JSON配置',
    jsonConfigError: '请检查json配置格式。',
  },
  image: {
    listQueryError: '镜像列表获取失败...请刷新页面重试。',
    deleteError: '镜像删除失败...请重试。',
    deleteSuccess: '镜像删除成功',
    pullError: '镜像缓存失败...请重试。',
    pullSuccess: '镜像缓存成功',
  },
  routerule: {
    routeruleDesc: '控制实例间的路由规则',
  },
  table: {
    rowsPerPage: '每页显示',
  },
  instruction: {
    waiting: '未设置',
    now: '当前',
    finished: '已设置',
  },
  stressTesting: {
    startTest: '开始测试',
    stressTestingDescription:
      '考察当前软件和硬件环境下，系统所能承受的最大负荷，并帮助找出系统的瓶颈所在。',
    planNameDescription:
      '名称只能包含字母、数字和连字符（-），必须以字母或数字开头和结尾，最长 253 个字符。',
    planCommentDescription: '对于计划的补充说明。',
    groupCommentDescription: '对于线程组的补充说明。',
    nameEmptyErrorMsg: '请设置一个名称。',
    namePatternErrorMsg:
      '名称只能包含字母、数字和连字符（-），必须以字母或数字开头和结尾，最长 253 个字符。',
    serializeThreadgroupsDescription: '独立运行每个线程组',
    tearDownOnShutdownDescription: '主线程结束后运行tearDown线程组',
    functionalModeDescription:
      '函数测试（只有当你需要记录每个请求从服务器取得的数据到文件时才需要选择函数测试模式。选择这个选项很影响性能。）',
    groupAddDescription: '自定义线程组的设置以创建线程组。',
    groupEmptyError: '请对线程组进行设置。',
    sameUserDescription: 'Same user on each iteration',
    delayStartDescription: '延迟创建线程直到需要',
    schedulerDescription: '调度器',
    webServerDescription: '对Web服务器进行设置。',
    httpRequestDescription: '对HTTP请求进行设置。',
    timerAddDescription: '自定义定时器的设置以创建定时器。',
    planCreatedMsg: '成功创建测试计划！',
    planCreationFailedMsg: '测试计划创建失败，请重试。',
    planSearchError: '无法获取测试计划，请刷新页面重试。',
    resultsSearchError: '无法获取测试结果，请刷新页面重试。',
    testStartMsg: '测试已启动，请稍后查看结果。',
    testStartError: '测试启动失败，请重试。',
    aggregateReportError: '聚合报告获取出错，请重试。',
    aggregateReportCreateSuccess: '聚合报告已生成。',
    aggregateReportCreateError: '聚合报告生成失败，请重试。',
    aggregateReportUpdateeSuccess: '聚合报告已更新。',
    aggregateReportUpdateeError: '聚合报告更新失败，请重试。',
    getStartAndEndFailedMsg: '测试时间获取失败。',
    aggregateExcelExportFailedMsg: 'Excel导出失败，请重试...',
    updateAggregateReport: '更新聚合报告',
    createAggregateReport: '创建聚合报告',
    exportXlsReport: '导出报告 (xls)',
    cpuUsage: 'CPU 用量 (m)',
    memUsage: '内存用量 (Mi)',
    transferredFlow: '出站流量 (Kbps)',
    receivedFlow: '入站流量 (Kbps)',
    threadDelay: '线程延迟',
    constantDelayOffset: '恒定延迟偏移',
    randomDelayMaximum: '延迟最大值',
    testResult: '测试结果',
    aggregateReport: '聚合报告',
    deleteResult: '删除结果',
    threadMsDelay: '线程延迟（毫秒）',
    msDeviation: '偏差（毫秒）',
    constantMsDelayOffset: '固定延迟偏移（毫秒）',
    msLambda: 'Lambda（毫秒）',
    randomMsDelayMaximum: '最大随机延迟时间（毫秒）',
    headerStorage: '信息头存储在信息头管理器中',
    noParametersCurrently: '暂无参数',
    threadGroupSetting: '线程组设置',
    requestDefaults: '请求默认值',
    headerManager: '请求头管理',
    addThreadGroup: '添加线程组',
    serverNameOrIP: '服务器名称或IP',
    startNextLoop: '启动下一进程循环',
    stopthread: '停止进程',
    stopTest: '停止测试',
    stoptestnow: '立即停止测试',
    onSamplerError: '在取样器错误后要执行的动作',
    rampUpTime: 'Ramp-Up时间（秒）',
    durationS: '持续时间（秒）',
    startDelayS: '启动延迟（秒）',
    timerList: '定时器列表',
    addTimer: '添加定时器',
    constantTimer: '固定计时器',
    uniformRandomTimer: '统一随机定时器',
    poissonRandomTimer: '泊松随机定时器',
    gaussianRandomTimer: '高斯随机定时器',
    editTimer: '修改定时器',
    createTestPlan: '创建测试计划',
    editThreadGroup: '修改线程组',
    noOptionalNamespace: '无可选命名空间',
    noOptionalPod: '无可选Pod',
    planName: '测试名称',
    performancePressureTest: '性能压测',
    performBoundaryTest: '执行边界测试',
    delayedStartTime: '延迟启动时间（秒）',
    newConcurrentRequestsPerRound: '每轮新增并发数',
    initialUsersCount: '初始并发数',
    increasePeriod: '增长周期（秒）',
    rampUpPerPeriod: '每轮并发数启动时间（秒）',
    flighttime: '并发峰值持续时间（秒）',
    stopUsersCount: '周期停止并发数',
    stopUsersPeriod: '并发停止周期（秒）',
    boundaryTest: '边界测试',
    boundaryResult: '边界测试结果',
    stepReport: '阶梯报告',
    communicationPressureBoundary: '通信压力边界',
    stepPressureDiagram: '阶梯压力图',
    groupAggregateReport: '线程组聚合报告',
    comment: '描述'
  },
  jointStressTesting: {
    performancePressureTest: '多负载性能压测',
    stressTestingDescription: '建立不同的测试场景（负载情况），对服务进行压测，并得到多场景下的性能数据',
    createTestPlan: '创建联合测试计划',
    planCreatedMsg: '创建联合测试计划成功',
    planCreationFailedMsg: '创建联合测试计划失败',
    testStartMsg: '执行联合测试计划成功',
    horiCoordinate: '横坐标',
    vertiCoordinate: '纵坐标',
    name: '联合测试计划名称',
    nameDescription: '请输入联合测试计划的名称',
    nameEmptyError: '测试计划名称不可为空',
    comment: '联合测试计划描述',
    commentDescription: "请输入对此联合测试计划的简单描述",
    sonTestPlans: '子测试计划',
    jointTestPlanName: '联合测试计划名称',
    deleteJointPlanSuccess:'删除联合测试计划成功',
    planUpdateMsg:'更新联合测试计划成功',
    updateTestPlan:'更新联合测试计划',
    planUpdateFailedMsg:'联合测试计划更新失败'

  },
  routeTrace: {
    title: '路由链路',
    titleHint:
      '查看服务的路由链路（页面会自动加载上一次搜索的内容，如果需要查询新的数据，请先点击一次搜索按钮）',

    duration1M: '1分钟内',
    duration2M: '2分钟内',
    duration5M: '5分钟内',
    duration10M: '10分钟内',
    duration30M: '30分钟内',
    duration1H: '1小时内',
    duration3H: '3小时内',
    duration6H: '6小时内',
    duration12H: '12小时内',
    duration1D: '1天内',
    duration7D: '7天内',
    durationCustom: '自定义',

    serviceTableButtonSearch: '搜索',
    serviceTableTitleService: '服务',
    serviceTableTitleApi: '接口',
    serviceTableTitleRequestCount: '请求次数',
    serviceTableTitleLow: 'Low',
    serviceTableTitle05: '0.5',
    serviceTableTitle095: '0.95',
    serviceTableTitle099: '0.99',
    serviceTableTitleHigh: 'High',
    serviceTableContentNoData: '无数据',
    serviceTableContentNoDataHint: '您可以尝试刷新数据',

    timeFormat: 'YYYY-MM-DD HH:mm:ss',

    popWindowTimeConsuming: '耗时',
    popWindowNoLinkDiagram: '无链路图',

    popWindowToday: '今天',
    popWindowYesterday: '昨天',
    popWindowDaysAgo: '天前',
    popWindowHoursAgo: '小时前',
    popWindowMinutesAgo: '分钟前',
    popWindowSecondsAgo: '秒前',

    popWindowTitle: '路由链路',
    popWindowDetail: '详情',
    popWindowServiceApi: '服务 API',
    popWindowRequestCount: '请求数量',
    popWindowLow: 'Low',
    popWindow95: '95%',
    popWindowHigh: 'High',

    popWindowTableTitle: '请求信息',
    popWindowTableTitleRequest: '请求',
    popWindowTableTitleLinkLength: '链路长度',
    popWindowTableTitleStartTime: '开始时间',
    popWindowTableTitleResponseTime: '响应时间',
    popWindowTableTitleStatus: '请求状态',

    modalTitle: '链路图',
    modalServiceId: '服务ID',
    modalServiceName: '服务名',
    modalTime: '时间',

    modalEmpty: '无数据',
    modalEmptyHint: '请点击右侧的请求信息以查看其链路图',
  },
  evolution: {
    evolution: '演化',
    evolutionPlan: '演化计划',
    evolutionPlanName: '演化计划名称',
    createEvolutionPlan: '创建演化计划',
    monitorConfiguration: '监控配置',
    monitorResource: '数据源',
    monitorResourceErrMsg: '请选择一个监控数据源',
    monitorResourceDescription: '配置监控数据源',
    moniterInterval: '间隔/触发条件',
    monitorExecutiveInterval: '配置执行的间隔/触发条件',
    analyseConfiguration: '分析配置',
    analyseConfigurationDescription: '分析配置(接算法)',
    planConfiguration: '规划配置',
    planConfigurationDescription: '规划配置(接算法)',
    executeConfiguration: '执行配置',
    executeConfigurationDescription: '执行配置(直接执行/通知等)',
    executeEvolution: '执行演化',
    evolutionGoal: '演化目标',
    triggerCondition: '触发条件',
    evolutionMean: '演化手段',
    evolutionAlgorithm: '演化算法',
  },
  dataSource:{
    dataSourceManagement: '数据源管理',
    dataSourceInfo: '数据源信息',
    dataSourceDescription: '数据源信息描述',
    dataSource: '数据源',
    dataType:'数据类型',
    startTime: '起始时间',
    endTime:'终止时间',
    query:'查询',
    dataSourceFetchError:'数据源获取失败',
    dataSourceDataFetchError:'数据信息获取失败',
    ID:'ID',
    value:'值',
    noData:'无数据',
    noDataHint:'请选择数据源与数据类型',
    dataSourceName:'数据源名称',
    dataSourceDes:'数据源描述',
    dataSourceTypes:'包含的数据种类',
    dataSourceSearchPrompt:'请输入数据源名称',
    numsPerPage:'每页显示',
    dataSourceCluster:'数据源集群',
    dataSourceHost:'数据源主机',
    dataSourceUrl:'数据源的Url',
    dataSourceStatus:'当前状态',
    dataSourceInterval:'数据源检测间隔',
    dataSourceLastSeen:'最后被检测到的时间戳',
    dataDetailInfo:'数据详细信息',
    dataGetOptions:'请选择该数据源包含数据的请求方式',
    confirm:'确认',
    dataDetailInfoQuery:'数据信息查询',
    dataInfoQueryInput:'查询条件填写',
    dataQueryInfoSelect:'请选择要查询的数据',
    dataQueryFetchError:'数据获取失败',
    dataSourceRegister:'注册数据源',
    register:'注册',
    dataSourceSchema:'数据的JsonSchema',
    dataSourceDriver:'数据源驱动方式',
    paramsName:'参数名称',
    paramsType:'参数枚举值',
    paramsRequired:'是否必选',
    paramsDescription:'参数描述',
    paramsDefault:'参数默认值',
    dataTypes:'数据源中的数据类型',
    dataName:'数据名称',
    dataDescription:'数据描述',
    dataIndex:'序号',
    queryParameters:'查询参数',
    addParam:'添加查询参数',
    addDataType:'添加数据类型',
    dataSourceRegisterSuccess:'数据源注册成功',
    dataSourceRegisterError:'数据源注册失败',
    dataSourceDeleteSuccess:'数据源删除成功',
    dataSourceDeleteError:'数据源删除失败',

  },
  industry:{
    label: '工业互联网平台',
    overview: '概览',
    overviews:{
      cpuCard: '服务CPU占用排名',
      memCard: '服务内存占用排名',
      statusCard: {
        1: '已发布',
        2: '运行中',
        3: '异常服务',
        4: '已停止',
      },
      serviceList: '服务列表',
      serviceLists: {
        id: '服务ID',
        name: '服务名称',
        status: '状态',
        releaseTime: '发布时间',
        version: '版本',
      }
    },
    log: '日志管理',
    serviceManage: '服务管理',
    serviceConfig: '服务配置',
    serviceMonitor: '服务监控'
  }
};
